@inject BillService BillService
<div class="bg-info">
    @if (savedClient != null)
    {
        <div>
            <div style="display: flex; flex-wrap: wrap; justify-content: space-evenly; align-items: center; gap: 1vw;">
                <div style="flex: 1 1 30%; min-width: 250px;"><strong>First Name:</strong> @savedClient.FirstName</div>
                <div style="flex: 1 1 30%; min-width: 250px;"><strong>Phone Number:</strong> @savedClient.PhoneNumber</div>
                <div style="flex: 1 1 30%; min-width: 250px;"><strong>Barber Name:</strong> @savedClient.BarberName</div>
            </div>

            <h4 style=" text-align: center; margin-top: 2vh; -webkit-text-stroke:1px  green; padding:2px; font-size:2rem; font-weight:bolder ">
                Bill Details
            </h4>

            <div style="margin-left: 1vw; align-items:center; display:grid;">
                <ol style="display: flex; flex-wrap: wrap; gap: 1rem; padding-left: 0;">
                    @foreach (var item in BillService.SelectedItems)
                    {
                        <li style="list-style-type: none; margin: 0;">
                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                            {
                                <img src="@item.ImageUrl"
                                     alt="Item Image"
                                     style="width: 30px; height: auto; margin-right: 10px;" />
                            }
                            @item.Name - @item.Price
                        </li>
                    }
                </ol>
            </div>
        </div>
    }

    <p class="total-amount">
        Total: @BillService.TotalAmount.ToString("C")
    </p>

    <!-- Amount Paid Input and Calculate Change -->
    <div class="row"> 
       <div class="col-1"> 
            <label for="amountPaid">Amount Paid:</label>
            <input type="number" id="amountPaid" class="form-control"
                   @bind="amountPaid" />
       </div>
        <div class="col-1">
            <button @onclick="CalculateChange"
                class="btn btn-outline-primary">
            Return
        </button>
        </div>
  
    <div class="col-1">
        <button class="btn btn-outline-danger" @onclick="ClearTotalAmount"><span>Clear</span></button>
        </div>
        @if (changeAmount.HasValue)
        {
            <p >
                Change to Return: @changeAmount.Value.ToString("C")
            </p>
        }
        @if (isError)
        {
            <p style="font-weight: bold; color: red; margin-top: 1vh;">
                @errorMessage
            </p>
        }
    </div>

 
       
   

</div>

@code {
    private Client client = new Client();
    private Client? savedClient;

    private decimal amountPaid;
    private decimal? changeAmount;
    private bool isError = false;
    private string errorMessage = string.Empty;

    public class Client
    {
        public string? FirstName { get; set; }
        public string? PhoneNumber { get; set; }
        public string? BarberName { get; set; }
    }

    private async Task AddToBill()
    {
        savedClient = new Client
            {
                FirstName = client.FirstName,
                PhoneNumber = client.PhoneNumber,
                BarberName = client.BarberName,
            };

        client = new Client();
        await InvokeAsync(StateHasChanged);
    }

    private void CalculateChange()
    {
        isError = false;
        errorMessage = string.Empty;

        if (amountPaid < BillService.TotalAmount)
        {
            isError = true;
            errorMessage = "Amount paid cannot be less than the total amount.";
            changeAmount = null;
        }
        else if (amountPaid <= 0)
        {
            isError = true;
            errorMessage = "Amount paid must be greater than zero.";
            changeAmount = null;
        }
        else
        {
            changeAmount = amountPaid - BillService.TotalAmount;
        }
    }

    private void ClearTotalAmount()
    {
        BillService.ClearAllItems();
    }

}
