@page "/bills"
@inject BillService BillService

<div>

    <span>Total:</span>
    <span>$ @BillService.TotalAmount</span>


    <button class="btn" @onclick="ClearAllItems"><span>Clear</span></button>

</div>
<div class="border p-5" style="max-height:80vh; min-height:50vh; overflow-y:scroll">
    
    <table class="table small">
        <thead>
            <tr>
                <th>Item Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in BillService.SelectedItems)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Quantity</td>
                    <td>@item.Price</td>
                    <td>
                        <button class="btn btn-outline-primary" @onclick="() => IncreaseQuantity(item)">
                            <i class="bi bi-plus"></i>
                        </button>
                        <button class="btn btn-outline-primary" @onclick="() => DecreaseQuantity(item)">
                            <i class="bi bi-dash"></i>
                        </button>
                        <button class="btn btn-outline-danger delete-button" @onclick="() => RemoveItem(item)">
                            <i class="bi bi-trash3"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    protected override void OnInitialized()
    {
        BillService.OnChange += async () => await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        BillService.OnChange -= async () => await InvokeAsync(StateHasChanged);
    }

    private void IncreaseQuantity(RateList.RateItem item)
    {
        item.Quantity++;
        item.Price = item.BasePrice * item.Quantity;
        BillService.UpdateItem(item);
    }

    private void DecreaseQuantity(RateList.RateItem item)
    {
        if (item.Quantity > 1)
        {
            item.Quantity--;
            item.Price = item.BasePrice * item.Quantity;
            BillService.UpdateItem(item);
        }
    }

    private void RemoveItem(RateList.RateItem item)
    {
        BillService.RemoveItem(item);
    }

    private void ClearAllItems()
    {
        BillService.ClearAllItems();
    }
    }
