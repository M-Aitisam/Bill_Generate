@page "/bills"
@using Blazored.LocalStorage
@inject ILocalStorageService LocalStorage
@inject BillService BillService

<h3>Bills</h3>

<div>
    <h4>Selected Items</h4>
    @if (BillService.SelectedItems.Any())
    {
        <ul>
            @foreach (var item in BillService.SelectedItems)
            {
                <li>@item.Name - @item.Price <button @onclick="() => RemoveItem(item)">Remove</button></li>
            }
        </ul>
        <p>Total: @BillService.TotalAmount</p>
        <button @onclick="SaveBill">Save Bill</button>
        <button @onclick="ClearBill">Clear Bill</button>
    }
    else
    {
        <p>No items have been added to the bill.</p>
    }
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await LoadBill();
    }

    private void RemoveItem(RateList.RateItem item)
    {
        BillService.RemoveItem(item);
        SaveBill().ConfigureAwait(false); // Update local storage after removing
    }

    private async Task SaveBill()
    {
        await LocalStorage.SetItemAsync("savedBill", BillService.SelectedItems.ToList());
    }

    private async Task LoadBill()
    {
        var savedItems = await LocalStorage.GetItemAsync<List<RateList.RateItem>>("savedBill");
        if (savedItems != null)
        {
            BillService.LoadItems(savedItems);
        }
    }

    private async Task ClearBill()
    {
        BillService.ClearItems();
        await LocalStorage.RemoveItemAsync("savedBill"); // Clear local storage
    }
}
