@page "/bills"
@inject BillService BillService

<div style="padding:2vw; width: 30vw; border:1px solid black; border-radius: 8px;">
    <h3 style="display: flex; align-items:center; justify-content:center; -webkit-text-stroke:1px black; color:darkgreen; padding-bottom:2vh; font-weight:bold;">
        Bills
    </h3>
    <hr />
    <ul style="list-style-type: none; padding: 0;">
        @foreach (var item in BillService.SelectedItems)
        {
            <li style="display: flex; align-items:center; justify-content:space-between; margin-bottom: 10px; padding: 5px; border-bottom: 1px solid #ddd;">
                <div style="flex: 2;">
                    @item.Name
                </div>
                <div style="flex: 1; text-align: center;">
                    1 <!-- Assuming quantity is always 1 in this case -->
                </div>
                <div style="flex: 2; text-align: right;">
                    @item.Price
                </div>
                <button class="btn btn-outline-danger" style="margin-left: 10px;" @onclick="() => RemoveItem(item)">X</button>
            </li>
        }
    </ul>
    <p style="display: flex; align-items:center; justify-content:center; font-weight:bold; margin-top:10px;">
        <span style="flex: 1;">Total:</span>
        <span style="flex: 1; text-align: right;">@BillService.TotalAmount</span>
    </p>
    <button class="btn btn-outline-danger" style="margin: 2vh 0 0 35%;" @onclick="ClearAllItems">Clear All</button>
</div>

@code {
    protected override void OnInitialized()
    {
        BillService.OnChange += async () => await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        BillService.OnChange -= async () => await InvokeAsync(StateHasChanged);
    }

    private void RemoveItem(RateList.RateItem item)
    {
        BillService.RemoveItem(item);
    }

    private void ClearAllItems()
    {
        BillService.ClearAllItems();
    }
}
