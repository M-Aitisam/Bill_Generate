@page "/clientinformation"
@inject BillService BillService

<div style="background-color:white; padding: 2vw; max-width: 100%;">

    <div style="display: flex; flex-wrap: wrap; align-items:center; justify-content:space-evenly; gap: 1vw; margin-bottom: 2vh;">
        <div style="flex: 1 1 30%; min-width: 250px;">
            <label>First Name:</label>
            <input type="text"
                   style="padding: 2px; border-radius: 5px; width: 100%; border: 1px solid green;"
                   @bind="client.FirstName" />
        </div>
        <div style="flex: 1 1 30%; min-width: 250px;">
            <label>Phone Number:</label>
            <input type="text"
                   style="padding: 2px; border-radius: 5px; width: 100%; border: 1px solid green;"
                   @bind="client.PhoneNumber" />
        </div>
        <div style="flex: 1 1 30%; min-width: 250px;">
            <label>Barber Name:</label>
            <select style="padding: 2px; border-radius: 5px; width: 100%; border: 1px solid green;"
                    @bind="client.BarberName">
                @foreach (var barber in barbers)
                {
                    <option value="@barber">@barber</option>
                }
            </select>
        </div>
    </div>

    <div style="text-align: center; margin-top: 2vh;">
        <button @onclick="AddToBill"
                class="btn btn-outline-success"
                style="padding: 5px 10px; border-radius: 5px;">
            Add to Bill
        </button>
    </div>

    @if (savedClient != null)
    {
        <div style="border: 1px solid black; padding: 2vw; margin-top: 2vh; max-width: 100%;">
            <div style="display: flex; flex-wrap: wrap; justify-content: space-evenly; align-items: center; gap: 1vw;">
                <div style="flex: 1 1 30%; min-width: 250px;"><strong>First Name:</strong> @savedClient.FirstName</div>
                <div style="flex: 1 1 30%; min-width: 250px;"><strong>Phone Number:</strong> @savedClient.PhoneNumber</div>
                <div style="flex: 1 1 30%; min-width: 250px;"><strong>Barber Name:</strong> @savedClient.BarberName</div>
            </div>

            <h4 style="text-align: center; margin-top: 2vh;">
                Bill Details
            </h4>

            <div style="margin-left: 1vw; align-items:center; display:grid;">
                <ol style="display: flex; flex-wrap: wrap; gap: 1rem; padding-left: 0;">
                    @foreach (var item in BillService.SelectedItems)
                    {
                        <li style="list-style-type: none; margin: 0;">
                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                            {
                                <img src="@item.ImageUrl"
                                     alt="Item Image"
                                     style="width: 30px; height: auto; margin-right: 10px;" />
                            }
                            @item.Name - @item.Price
                        </li>
                    }
                </ol>
            </div>

            <p style="color: darkgreen; text-align: center; font-weight: bold; -webkit-text-stroke: 1px black;">
                Total: @BillService.TotalAmount.ToString("C")
            </p>
        </div>
    }

    <p class="total-amount" style="font-weight: bold;">
        Total: @BillService.TotalAmount.ToString("C")
    </p>

    <div style="text-align: center; margin-top: 2vh;">
        <button class="btn-53 btn-clear" @onclick="ClearTotalAmount"
                style="padding: 5px 10px; border-radius: 5px;">
            Clear
        </button>
    </div>
</div>

@code {
    private Client client = new Client();
    private Client? savedClient;
    private List<string> barbers = new List<string> { "John", "Jane", "Alex", "Sam", "Moiz", "Shoaib" };

    public class Client
    {
        public string? FirstName { get; set; }
        public string? PhoneNumber { get; set; }
        public string? BarberName { get; set; }
        public string? ImageUrl { get; set; }
    }

    private async Task AddToBill()
    {
        savedClient = new Client
            {
                FirstName = client.FirstName,
                PhoneNumber = client.PhoneNumber,
                BarberName = client.BarberName,
                ImageUrl = "/images/client_image.jpg"
            };

        client = new Client();
        await InvokeAsync(StateHasChanged);
    }

    private void ClearTotalAmount()
    {
        BillService.ClearAllItems();
    }

    protected override void OnInitialized()
    {
        BillService.OnChange += async () => await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        BillService.OnChange -= async () => await InvokeAsync(StateHasChanged);
    }
}
